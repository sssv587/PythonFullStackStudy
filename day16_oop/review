回顾：
面向对象的特点：
封装、继承、多态
封装：
私有化属性，定义公共的set和get方法
class Student:
    def __init__(self,):
        @property
        def age(self):
            return self.__age
        @age.setter
        def age(self,age):
            self.__age=age

s = Student()
s.age = 10

继承:
is a:
    父类  子类
    class Student(Person):
        def __init__(self,book,computer):
            book 是自定义类型 ----- 系统类型

    s = Student()

多继承：
class C(A,B):
    pass

C.__mro__

多态:
class Person:
    def feed_cat(self,pet):
        if isinstance(pet,Pet):
            pass
        else:
            pass